policy_module(binjit, 1.100.1)

########################################
#
# Declarations
#

type binjit_t;
type binjit_exec_t;
init_daemon_domain(binjit_t, binjit_exec_t)

permissive binjit_t;

type binjit_initrc_exec_t;
init_script_file(binjit_initrc_exec_t)

type binjit_conf_t;
files_type(binjit_conf_t)

type binjit_var_lib_t;
files_type(binjit_var_lib_t)

type binjit_var_run_t;
files_type(binjit_var_run_t)

type binjit_port_t;
corenet_port(binjit_port_t)

########################################
#
# binjit local policy
#
allow binjit_t self:process { fork };

allow binjit_t self:fifo_file rw_fifo_file_perms;
allow binjit_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(binjit_t, binjit_conf_t, binjit_conf_t)
manage_files_pattern(binjit_t, binjit_conf_t, binjit_conf_t)

manage_dirs_pattern(binjit_t, binjit_var_lib_t, binjit_var_lib_t)
manage_files_pattern(binjit_t, binjit_var_lib_t, binjit_var_lib_t)
files_var_lib_filetrans(binjit_t, binjit_var_lib_t, { dir file })

manage_dirs_pattern(binjit_t, binjit_var_run_t, binjit_var_run_t)
manage_files_pattern(binjit_t, binjit_var_run_t, binjit_var_run_t)

sysnet_dns_name_resolve(binjit_t)
corenet_all_recvfrom_unlabeled(binjit_t)

allow binjit_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(binjit_t)
corenet_tcp_sendrecv_generic_node(binjit_t)
corenet_tcp_sendrecv_all_ports(binjit_t)
corenet_tcp_bind_generic_node(binjit_t)

gen_require(`
    type binjit_port_t;
')
allow binjit_t binjit_port_t:tcp_socket name_bind;

gen_require(`
    type binjit_port_t;
')
allow binjit_t binjit_port_t:tcp_socket name_connect;

domain_use_interactive_fds(binjit_t)

files_read_etc_files(binjit_t)

miscfiles_read_localization(binjit_t)

sysnet_dns_name_resolve(binjit_t)

allow binjit_t binjit_exec_t:file execute_no_trans;
allow binjit_t self:process setsched;
corecmd_exec_ls(binjit_t)
corenet_tcp_connect_http_port(binjit_t)
dev_read_urand(binjit_t)
fs_getattr_xattr_fs(binjit_t)
kernel_read_system_state(binjit_t)
